name: Build and Release

on:
  push:
    branches:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [darwin, linux, windows]
        goarch: [amd64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
        stable: true

    - name: Build Application
      run: |
        cd application
        npm i
        CI=false npm run build

    - name: Build Handler
      run: |
        cp -R application/build handler/build
        cd handler
        env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ../app-${{ matrix.goos }}-${{ matrix.goarch }} .

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: app-${{ matrix.goos }}-${{ matrix.goarch }}
        path: app-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Artifacts
      uses: actions/download-artifact@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app-darwin-amd64/app-darwin-amd64
        asset_name: app-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app-linux-amd64/app-linux-amd64
        asset_name: app-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app-windows-amd64/app-windows-amd64
        asset_name: app-windows-amd64.exe
        asset_content_type: application/octet-stream
